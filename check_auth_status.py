#!/usr/bin/env python3
"""
Script pour v√©rifier l'√©tat de l'authentification admin
"""

import requests
import json
from urllib.parse import urljoin

def check_auth_status():
    """V√©rifier l'√©tat de l'authentification"""
    
    base_url = "http://10.188.193.170:5000"
    
    print("üîç V√©rification de l'√©tat d'authentification")
    print("=" * 60)
    
    # Cr√©er une session pour maintenir les cookies
    session = requests.Session()
    
    # Test 1: V√©rifier la page de login
    print("\n1. Test de la page de login...")
    try:
        response = session.get(f"{base_url}/login", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   URL: {response.url}")
        
        if response.status_code == 200:
            print("   ‚úÖ Page de login accessible")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Erreur de connexion: {e}")
        return
    
    # Test 2: Tentative de connexion admin
    print("\n2. Tentative de connexion admin...")
    
    login_data = {
        'email': 'admin@monderh.fr',
        'password': 'admin123'
    }
    
    try:
        response = session.post(f"{base_url}/login", data=login_data, timeout=10, allow_redirects=True)
        print(f"   Status: {response.status_code}")
        print(f"   URL finale: {response.url}")
        
        if response.status_code == 200:
            if "admin" in response.url or "dashboard" in response.url:
                print("   ‚úÖ Connexion r√©ussie")
            elif "login" in response.url:
                print("   ‚ùå Connexion √©chou√©e - rest√© sur la page login")
            else:
                print("   ‚ö†Ô∏è  Connexion - URL inattendue")
        elif response.status_code == 302:
            print("   ‚úÖ Redirection apr√®s connexion")
            print(f"   Location: {response.headers.get('Location', 'Non sp√©cifi√©e')}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Erreur de connexion: {e}")
    
    # Test 3: V√©rifier l'acc√®s √† la page admin
    print("\n3. Test d'acc√®s √† la page admin...")
    try:
        response = session.get(f"{base_url}/admin", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   URL: {response.url}")
        
        if response.status_code == 200:
            if "admin" in response.url:
                print("   ‚úÖ Acc√®s admin autoris√©")
            else:
                print("   ‚ö†Ô∏è  Acc√®s admin - URL inattendue")
        elif response.status_code == 302:
            print("   ‚ùå Redirection - acc√®s non autoris√©")
            print(f"   Location: {response.headers.get('Location', 'Non sp√©cifi√©e')}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Erreur d'acc√®s: {e}")
    
    # Test 4: V√©rifier l'acc√®s au formulaire de cr√©ation d'offre
    print("\n4. Test d'acc√®s au formulaire de cr√©ation d'offre...")
    try:
        response = session.get(f"{base_url}/admin/jobs/new", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   URL: {response.url}")
        
        if response.status_code == 200:
            if "admin/jobs/new" in response.url:
                print("   ‚úÖ Acc√®s au formulaire autoris√©")
                # V√©rifier le contenu
                if "Debug Info" in response.text:
                    print("   ‚úÖ Formulaire simplifi√© trouv√©")
                else:
                    print("   ‚ùå Formulaire simplifi√© non trouv√©")
            else:
                print("   ‚ö†Ô∏è  Acc√®s au formulaire - URL inattendue")
        elif response.status_code == 302:
            print("   ‚ùå Redirection - acc√®s non autoris√©")
            print(f"   Location: {response.headers.get('Location', 'Non sp√©cifi√©e')}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Erreur d'acc√®s: {e}")
    
    # Test 5: V√©rifier les cookies de session
    print("\n5. V√©rification des cookies de session...")
    cookies = session.cookies
    if cookies:
        print("   ‚úÖ Cookies de session pr√©sents:")
        for cookie in cookies:
            print(f"     {cookie.name}: {cookie.value[:20]}...")
    else:
        print("   ‚ùå Aucun cookie de session")
    
    print("\n" + "=" * 60)
    print("üîß Recommandations:")
    print("1. V√©rifiez que vous √™tes bien connect√© en tant qu'admin")
    print("2. Essayez de vous reconnecter")
    print("3. V√©rifiez que l'utilisateur admin existe dans la base de donn√©es")
    print("4. Testez avec le formulaire de test: /test/jobs/form")

if __name__ == "__main__":
    check_auth_status() 