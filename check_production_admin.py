#!/usr/bin/env python3
"""
Script pour v√©rifier et cr√©er l'utilisateur admin en production
"""

import os
import sys
import requests
from datetime import datetime

def check_admin_exists():
    """V√©rifie si l'utilisateur admin existe en production"""
    print("üîç V√©rification de l'utilisateur admin en production")
    print("=" * 60)
    
    # URL de votre site en production
    production_url = "https://mondrh.onrender.com"
    
    print(f"üåê URL: {production_url}")
    print(f"‚è∞ Heure: {datetime.now()}")
    print()
    
    # Test 1: V√©rifier l'accessibilit√© du site
    print("üìã Test 1: Accessibilit√© du site")
    try:
        response = requests.get(production_url, timeout=30)
        if response.status_code == 200:
            print("   ‚úÖ Site accessible")
        else:
            print(f"   ‚ùå Erreur {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå Erreur de connexion: {e}")
        return False
    
    # Test 2: Tester la connexion avec l'email correct
    print("\nüìã Test 2: Test de connexion avec l'email correct")
    print("   üìß Email: faladespero1@gmail.com")
    print("   üîë Mot de passe: admin124")
    
    try:
        session = requests.Session()
        
        # Donn√©es de connexion CORRECTES
        login_data = {
            'email': 'faladespero1@gmail.com',  # Email correct
            'password': 'admin124',
            'remember_me': False
        }
        
        # Tentative de connexion
        response = session.post(f"{production_url}/login", data=login_data, timeout=30)
        
        if response.status_code == 302:  # Redirection apr√®s connexion
            print("   ‚úÖ Connexion r√©ussie !")
            
            # Suivre la redirection
            redirect_url = response.headers.get('Location')
            if redirect_url:
                print(f"   üìç Redirection vers: {redirect_url}")
                
                # Tester l'acc√®s au tableau de bord
                dashboard_response = session.get(f"{production_url}{redirect_url}", timeout=30)
                if dashboard_response.status_code == 200:
                    print("   ‚úÖ Acc√®s au tableau de bord r√©ussi")
                    print("   üéâ L'utilisateur admin existe et fonctionne !")
                    return True
                else:
                    print(f"   ‚ùå Erreur d'acc√®s au tableau de bord: {dashboard_response.status_code}")
        else:
            print(f"   ‚ùå √âchec de la connexion: {response.status_code}")
            print(f"   üìÑ R√©ponse: {response.text[:200]}...")
            
            # V√©rifier si c'est un probl√®me d'utilisateur inexistant
            if "incorrect" in response.text.lower():
                print("   üîç Probl√®me: Email ou mot de passe incorrect")
                print("   üí° Cela peut signifier que l'utilisateur admin n'existe pas")
            
    except Exception as e:
        print(f"   ‚ùå Erreur lors du test de connexion: {e}")
    
    return False

def create_admin_via_api():
    """Tente de cr√©er l'admin via l'API (si disponible)"""
    print("\nüìã Test 3: Tentative de cr√©ation d'admin via l'API")
    
    production_url = "https://mondrh.onrender.com"
    
    try:
        # Essayer de cr√©er un compte via l'API d'inscription
        register_data = {
            'email': 'faladespero1@gmail.com',
            'password': 'admin124',
            'first_name': 'Spero',
            'last_name': 'Falade',
            'account_type': 'admin',
            'company': 'MonDRH',
            'phone': '+33 1 23 45 67 89'
        }
        
        response = requests.post(f"{production_url}/register", data=register_data, timeout=30)
        
        if response.status_code == 302:  # Redirection apr√®s inscription
            print("   ‚úÖ Inscription r√©ussie !")
            return True
        else:
            print(f"   ‚ùå √âchec de l'inscription: {response.status_code}")
            print(f"   üìÑ R√©ponse: {response.text[:200]}...")
            
    except Exception as e:
        print(f"   ‚ùå Erreur lors de l'inscription: {e}")
    
    return False

def main():
    """Fonction principale"""
    print("üöÄ Diagnostic de l'utilisateur admin MondeRH en production")
    print("=" * 70)
    
    # Test de connexion
    if check_admin_exists():
        print("\nüéâ R√©sultat: L'utilisateur admin fonctionne correctement !")
        print("üí° Assurez-vous d'utiliser l'email exact: faladespero1@gmail.com")
    else:
        print("\n‚ùå R√©sultat: L'utilisateur admin n'existe pas ou ne fonctionne pas")
        print("\nüîß Solutions:")
        print("   1. V√©rifiez les logs Render pour voir si setup_production_db.py s'est ex√©cut√©")
        print("   2. V√©rifiez que la base de donn√©es PostgreSQL est active")
        print("   3. V√©rifiez les variables d'environnement DATABASE_URL et SECRET_KEY")
        
        # Tentative de cr√©ation
        if create_admin_via_api():
            print("   ‚úÖ Admin cr√©√© avec succ√®s via l'API !")
        else:
            print("   ‚ùå Impossible de cr√©er l'admin via l'API")
            print("\nüìû Actions √† effectuer:")
            print("   1. Allez dans Render > Votre service > Logs")
            print("   2. Recherchez les erreurs de base de donn√©es")
            print("   3. V√©rifiez que setup_production_db.py s'ex√©cute au d√©marrage")
            print("   4. Red√©ployez l'application si n√©cessaire")

if __name__ == "__main__":
    main() 